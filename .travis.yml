language: cpp
sudo: required
dist: xenial
compiler:
- clang
os:
- linux
before_install:
- echo $TRAVIS_OS_NAME
install:
- sudo apt-get -y install libcurl4-openssl-dev
- cd ~ && git clone https://github.com/NESTchain/BerkeleyDB.git
- cd db-18.1.25/build_unix && ../dist/configure --prefix=/usr --enable-cxx
- make && sudo make install
- mkdir  ~/wasm-compiler && cd ~/wasm-compiler
- git clone --depth 1 --single-branch --branch release_70 https://github.com/llvm-mirror/llvm.git
- cd llvm/tools
- git clone --depth 1 --single-branch --branch release_70 https://github.com/llvm-mirror/clang.git
- cd .. && mkdir -p build && cd build
- cmake -G "Unix Makefiles" -DCMAKE_INSTALL_PREFIX=~/opt/wasm -DLLVM_ENABLE_RTTI=ON -DCMAKE_CXX_COMPILER=clang++ -DCMAKE_C_COMPILER=clang -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_EXPERIMENTAL_TARGETS_TO_BUILD=WebAssembly -DCMAKE_BUILD_TYPE=Release ..
- make -j4 install
- cd ~ && wget https://dl.bintray.com/boostorg/release/1.69.0/source/boost_1_69_0.tar.gz -O  boost_1_69_0.tar.gz
- tar -zxvf boost_1_69_0.tar.gz && cd boost_1_69_0 && chmod +x bootstrap.sh
- ./bootstrap.sh --with-toolset=clang --prefix=~/opt/boost
- ./b2 -j 4 stage release
- ./b2 install --prefix=~/opt/boost
script:
- cd contracts/musl/upstream && git checkout eosio
- cd ../../.. && mkdir -p build &&  cd build
- cmake -DWASM_ROOT=~/opt/wasm -DCMAKE_CXX_COMPILER=~/opt/wasm/bin/clang++ -DCMAKE_C_COMPILER=~/opt/wasm/bin/clang -DOPENSSL_ROOT_DIR=/usr/include/openssl -DOPENSSL_INCLUDE_DIR=/usr/include/openssl -DBOOST_ROOT=~/opt/boost -DCMAKE_BUILD_TYPE=Release ..
- make -j2
after_success:
branches:
only:
  - develop
notifications:
email: false
template:
    - "%{repository}/%{branch} (%{commit} - %{author}): %{build_url}: %{message}"
webhooks:
urls:
on_success: always
on_failure: always
on_start: always
env:
global:
